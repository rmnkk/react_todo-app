{"version":3,"sources":["components/Todo/Todo.js","components/TodoList/TodoList.js","components/TodoApp/TodoApp.js","App.js","index.js"],"names":["Todo","title","id","onCompletedChange","completed","className","classNames","checked","type","onChange","TodoList","todos","setTodos","handleCompletedChange","map","todo","key","TodoApp","useState","inputValue","setInputValue","toggleAll","setToggleAll","completedTodos","filter","useEffect","every","onSubmit","e","preventDefault","Date","value","placeholder","target","trimLeft","length","htmlFor","href","App","ReactDOM","render","document","getElementById"],"mappings":"4TAIaA,EAAO,SAAC,GAAD,IAClBC,EADkB,EAClBA,MACAC,EAFkB,EAElBA,GACAC,EAHkB,EAGlBA,kBACAC,EAJkB,EAIlBA,UAJkB,OAMlB,wBAAIC,UAAWC,IAAW,CACxBF,eAGA,yBAAKC,UAAU,QACb,2BACEE,QAASH,EACTI,KAAK,WACLH,UAAU,SACVI,SAAU,WACRN,EAAkBD,MAGtB,+BAAQD,GACR,4BAAQO,KAAK,SAASH,UAAU,aAGlC,2BAAOG,KAAK,OAAOH,UAAU,WCvBpBK,EAAW,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1BC,EAAwB,SAACX,GAC7BU,EAASD,EAAMG,KAAI,SAACC,GAClB,OAAIA,EAAKb,KAAOA,EACP,2BACFa,GADL,IAEEX,WAAYW,EAAKX,YAId,eAAKW,QAIhB,OACE,wBAAIV,UAAU,aACXM,EAAMG,KAAI,SAAAC,GAAI,OACb,kBAAC,EAAD,eACEZ,kBAAmBU,EACnBG,IAAKD,EAAKb,IACNa,SCrBDE,EAAU,WAAO,IAAD,EACSC,mBAAS,IADlB,mBACpBC,EADoB,KACRC,EADQ,OAEDF,mBAAS,IAFR,mBAEpBP,EAFoB,KAEbC,EAFa,OAGOM,oBAAS,GAHhB,mBAGpBG,EAHoB,KAGTC,EAHS,KAKrBC,EAAiBZ,EAAMa,QAAO,SAAAT,GAAI,OAAuB,IAAnBA,EAAKX,aAEjDqB,qBAAU,kBAAMH,EAAaX,EAAMe,OAAM,SAAAX,GAAI,OAAIA,EAAKX,gBAAa,CAACO,IAuBpE,OACE,6BAASN,UAAU,WACjB,4BAAQA,UAAU,UAChB,qCAEA,0BACEsB,SAAU,SAACC,GA3BQ,IAAC3B,EA4BlB2B,EAAEC,kBA5BgB5B,EA6BCkB,IA3BzBP,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAClBT,IAAK,IAAI4B,KACT7B,QACAG,WAAW,MAIfgB,EAAc,MAuBR,2BACEW,MAAOZ,EACPX,KAAK,OACLH,UAAU,WACV2B,YAAY,yBACZvB,SAAU,SAAAmB,GAAC,OAAIR,EAAcQ,EAAEK,OAAOF,MAAMG,iBAKjDvB,EAAMwB,OAAS,GACd,6BAAS9B,UAAU,QACjB,2BACEE,QAASc,EACTb,KAAK,WACLN,GAAG,aACHG,UAAU,aACVI,SAAU,WApClBa,GAAcD,GAEdT,EAASD,EAAMG,KAAI,SAAAC,GAAI,kCAClBA,GADkB,IAErBX,WAAYiB,WAoCR,2BAAOe,QAAQ,cAAf,wBAEA,kBAAC,EAAD,CACEd,aAAcA,EACdD,UAAWA,EACXT,SAAUA,EACVD,MAAOA,KAKZA,EAAMwB,OAAS,GACd,4BAAQ9B,UAAU,UAChB,0BAAMA,UAAU,cACa,IAA1BkB,EAAeY,QAAf,UACIZ,EAAeY,OADnB,cAI0B,IAA1BZ,EAAeY,QAAf,UACIZ,EAAeY,OADnB,gBAKH,wBAAI9B,UAAU,WACZ,4BACE,uBAAGgC,KAAK,KAAKhC,UAAU,YAAvB,QAGF,4BACE,uBAAGgC,KAAK,YAAR,WAGF,4BACE,uBAAGA,KAAK,eAAR,eAIJ,4BAAQ7B,KAAK,SAASH,UAAU,mBAAhC,sBC7FKiC,MANf,WACE,OACE,kBAAC,EAAD,OCIJC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.de3e618b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport const Todo = ({\n  title,\n  id,\n  onCompletedChange,\n  completed,\n}) => (\n  <li className={classNames({\n    completed,\n  })}\n  >\n    <div className=\"view\">\n      <input\n        checked={completed}\n        type=\"checkbox\"\n        className=\"toggle\"\n        onChange={() => {\n          onCompletedChange(id);\n        }}\n      />\n      <label>{title}</label>\n      <button type=\"button\" className=\"destroy\" />\n    </div>\n\n    <input type=\"text\" className=\"edit\" />\n  </li>\n);\n\nTodo.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  onCompletedChange: PropTypes.func.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\n\nexport const TodoList = ({ todos, setTodos }) => {\n  const handleCompletedChange = (id) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }\n\n      return { ...todo };\n    }));\n  };\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map(todo => (\n        <Todo\n          onCompletedChange={handleCompletedChange}\n          key={todo.id}\n          {...todo}\n        />\n      ))}\n\n      {/* <li> */}\n      {/*  <div className=\"view\"> */}\n      {/*    <input type=\"checkbox\" className=\"toggle\" /> */}\n      {/*    <label>asdfghj</label> */}\n      {/*    <button type=\"button\" className=\"destroy\" /> */}\n      {/*  </div> */}\n      {/*  <input type=\"text\" className=\"edit\" /> */}\n      {/* </li> */}\n\n      {/* <li className=\"completed\"> */}\n      {/*  <div className=\"view\"> */}\n      {/*    <input type=\"checkbox\" className=\"toggle\" /> */}\n      {/*    <label>qwertyuio</label> */}\n      {/*    <button type=\"button\" className=\"destroy\" /> */}\n      {/*  </div> */}\n      {/*  <input type=\"text\" className=\"edit\" /> */}\n      {/* </li> */}\n\n      {/* <li className=\"editing\"> */}\n      {/*  <div className=\"view\"> */}\n      {/*    <input type=\"checkbox\" className=\"toggle\" /> */}\n      {/*    <label>zxcvbnm</label> */}\n      {/*    <button type=\"button\" className=\"destroy\" /> */}\n      {/*  </div> */}\n      {/*  <input type=\"text\" className=\"edit\" /> */}\n      {/* </li> */}\n\n      {/* <li> */}\n      {/*  <div className=\"view\"> */}\n      {/*    <input type=\"checkbox\" className=\"toggle\" /> */}\n      {/*    <label>1234567890</label> */}\n      {/*    <button type=\"button\" className=\"destroy\" /> */}\n      {/*  </div> */}\n      {/*  <input type=\"text\" className=\"edit\" /> */}\n      {/* </li> */}\n    </ul>\n  );\n};\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n  setTodos: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport { TodoList } from '../TodoList';\n\nexport const TodoApp = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [toggleAll, setToggleAll] = useState(false);\n\n  const completedTodos = todos.filter(todo => todo.completed === false);\n\n  useEffect(() => setToggleAll(todos.every(todo => todo.completed)), [todos]);\n\n  const handleTodoAddition = (title) => {\n    if (title) {\n      setTodos([...todos, {\n        id: +new Date(),\n        title,\n        completed: false,\n      }]);\n    }\n\n    setInputValue('');\n  };\n\n  const handleToggleTodosStatus = () => {\n    setToggleAll(!toggleAll);\n\n    setTodos(todos.map(todo => ({\n      ...todo,\n      completed: !toggleAll,\n    })));\n  };\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            handleTodoAddition(inputValue);\n          }}\n        >\n          <input\n            value={inputValue}\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={e => setInputValue(e.target.value.trimLeft())}\n          />\n        </form>\n      </header>\n\n      {todos.length > 0 && (\n        <section className=\"main\">\n          <input\n            checked={toggleAll}\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={() => {\n              handleToggleTodosStatus();\n            }}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            setToggleAll={setToggleAll}\n            toggleAll={toggleAll}\n            setTodos={setTodos}\n            todos={todos}\n          />\n        </section>\n      )}\n\n      {todos.length > 0 && (\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {completedTodos.length === 1 && (\n              `${completedTodos.length} item left`\n            )}\n\n            {completedTodos.length !== 1 && (\n              `${completedTodos.length} items left`\n            )}\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      )}\n    </section>\n  );\n};\n","import React from 'react';\nimport { TodoApp } from './components/TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}